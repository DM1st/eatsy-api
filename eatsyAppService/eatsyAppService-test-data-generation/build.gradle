dependencies {

    implementation project(':eatsyAppService:eatsyAppService-model')
    implementation project(':eatsyAppService:eatsyAppService-domain')
    implementation project(':eatsyAppService:eatsyAppService-persistence')

    //Java utilities/helper libraries
    implementation "org.apache.commons:commons-lang3:$commonsLang3Version"

    //Faker - for generating test data
    //Exclude the problematic dependency and then add it again
    implementation("com.github.javafaker:javafaker:$javaFakerVersion") { exclude module: 'snakeyaml' }
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.30'

    //For creating and submitting requests from this project through the controller
    implementation "org.apache.httpcomponents:httpclient:4.5.14"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'
    implementation 'com.sun.mail:javax.mail:1.6.2'

    //logging
    implementation "org.apache.logging.log4j:log4j-core:$log4jCoreVersion"
    implementation "org.apache.logging.log4j:log4j-api:$log4jApiVersion"

    implementation 'org.springframework:spring-web:5.3.12'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'


}

//The below configures a Gradle task named generateRandomRecipes which is used to execute the main method of the
//GenerateAndPersistRandomRecipes class.

// Configure the Gradle application plugin and create a Gradle task to run the main class of this Gradle sub-project
//The Application plugin is a core Gradle plugin that defines a collection of ready-to-use tasks that help package and
// distribute the application.
apply plugin: 'application'

// Set the main class of the application to the PersistTestData class
ext {
    javaMainClass = "org.eatsy.appservice.testdatageneration.GenerateAndPersistRandomRecipes"
}
// Define the main class
application {
    mainClassName = javaMainClass
}
// Create a custom Gradle task to run the main class using the JavaExec type
task generateRandomRecipes(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    //Specify the classpath which is computed from the default properties of the build output and
    //contains the correct path where the computed class is actually placed
    classpath = sourceSets.main.runtimeClasspath
    main = javaMainClass
}
